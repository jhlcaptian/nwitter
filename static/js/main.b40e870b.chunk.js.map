{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","console","log","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NewFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","files","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArr","docs","map","document","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","currentUser","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b40e870b.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport firebase from \"firebase/compat\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n  // Your web app's Firebase configuration\r\n  const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const firebaseInstance = firebase;\r\n  export const authService = firebase.auth();\r\n  export const dbService = firebase.firestore();\r\n  export const storageService = firebase.storage();","import { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const[email,setEmail] = useState(\"\");\r\n    const[password,setPassword] = useState(\"\");\r\n    const[newAccount,setNewAccount] = useState(true);\r\n    const[error,setError] = useState(\"\");\r\n    const toggleAccount = () => setNewAccount((prev)=> !prev);\r\n    const onChange = (event) =>{\r\n        //console.log(event.target.name);\r\n        //구조 분해 할당\r\n        //event 객체하위에 target -> 하위에 name,value\r\n        const{target:{name,value},} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n        \r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                //createNewAccount\r\n                data = await authService.createUserWithEmailAndPassword(email,password);\r\n            }else{\r\n                //log in\r\n                data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            //console.log(data);\r\n        }catch(error){\r\n            setError(error.message);\r\n           // console.log(error);\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log-in\"} className=\"authInput authSubmit\" />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","import { useState } from \"react\";\r\nimport { authService,firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter,faGoogle,faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n   //const toggleAccount = () => setNewAccount((prev)=> !prev);\r\n    const onSocialClick = async(event) => {\r\n        //console.log(event.target.name);\r\n        const {\r\n            target : {name},\r\n        } = event;\r\n        let provider;\r\n        if(name == 'google'){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name == 'github'){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        console.log(provider);\r\n        const data = await authService.signInWithPopup(provider);\r\n        //console.log(data);\r\n    }\r\n    //input change이벤트시 엘리먼트에서 두가지를 구분할때 name값으로 구분하는것이 효율적.\r\n    return(\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{marginBottom:30}} />    \r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick = {onSocialClick} name=\"google\" className=\"authBtn\">Continue with Google\r\n                    <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick = {onSocialClick} name=\"github\" className=\"authBtn\">Continue with Github\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );   \r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash,faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj,isOwner}) =>{\r\n    const [editing,setEditing] = useState(false);\r\n    const [newNweet,setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        //console.log(ok);\r\n        if(ok){\r\n            //console.log(nweetObj.id);\r\n            //const data = await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n            //console.log(data);\r\n            await dbService.doc(`nweet/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl != \"\"){\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    }\r\n    //이전값 false를 반대로 세팅해준다\r\n    const toggleEditing = () => setEditing((prev)=> !prev);\r\n    //e.target.value값을 구조분해할당 용법으로 표현한것이다.\r\n    const onChange = (event) =>{\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj.id, newNweet);\r\n        await dbService.doc(`nweet/${nweetObj.id}`).update({text : newNweet});\r\n        setEditing(false);\r\n    }\r\n    return(\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input onChange={onChange} value={newNweet} required placeholder=\"Edit your nweet\" autoFocus className=\"formInput\"/>\r\n                        <input type=\"submit\" value=\"update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\r\n                </>\r\n            ) : (\r\n              <>  \r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl &&(<img src={nweetObj.attachmentUrl} width=\"5opx\" height=\"50px\" />)}\r\n                {isOwner && (\r\n                    <div className=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>    \r\n                    </div> \r\n                )}\r\n               </>\r\n            )}    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nweet;","import { dbService,storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus,faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nconst NewFactory = ({userObj}) =>{\r\n    const[nweet,setNweet] = useState(\"\");\r\n    const[attachment,setAttachment] = useState(\"\");\r\n    \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet == \"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if(attachmentUrl != \"\"){\r\n            //사용자id를 폴더이름으로, uuid4로 파일이름을 처리.\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        //console.log(await response.ref.getDownloadURL());\r\n        await dbService.collection(\"nweet\").add({\r\n            text:nweet,\r\n            createdAt:Date.now(),\r\n            creatorId:userObj.uid,\r\n            attachmentUrl,\r\n        });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) =>{\r\n        console.log(event.target.files);\r\n        const{\r\n            target : {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        //파일을 미리보기 할때는 fileReader api를 쓰면 된다.\r\n        const reader = new FileReader();\r\n        //onloadEnd는 파일입력 후 발생하는 이벤트 result에 imgUrl이 들어있따.\r\n        reader.onloadend = (finishedEvent) => {\r\n            console.log(finishedEvent);\r\n            const{\r\n                currentTarget : {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        if(Boolean(theFile)){\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return(\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput_input\"\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    value={nweet}\r\n                    required\r\n                    autoFocus\r\n                    onChange={onChange}\r\n                    maxLength = {120}\r\n                />\r\n                <input type=\"submit\" value=\"$rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>  \r\n                <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n                    <span>Add Photos</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity:0,}} />\r\n                {attachment && (\r\n                    <div className=\"factoryForm_attachment\">  \r\n                        <img src={attachment} style={{backgroundImage:attachment,}} />\r\n                        <div className=\"factoryForm_clear\" onClick={onClearAttachment}>\r\n                            <span>Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>    \r\n                    </div>\r\n                )}\r\n              \r\n          </form>\r\n    );\r\n}\r\n\r\nexport default NewFactory;","import { useEffect,useState } from \"react\";\r\nimport { dbService,storageService } from \"fbase\";\r\nimport { addDoc,collection,query,onSnapshot,getDocs } from \"@firebase/firestore\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { Fragment } from \"react\";\r\n//import { v4 as uuidv4 } from \"uuid\";\r\nimport NewFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    console.log(userObj);\r\n    //const[nweet,setNweet] = useState(\"\");\r\n    const[nweets,setNweets] = useState([]);\r\n    //const[attachment,setAttachment] = useState(\"\");\r\n\r\n    /*\r\n    const getNweets = async() =>{\r\n        const q= query(collection(dbService,'nweet'));\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc)=>{\r\n            const nweetObj = {\r\n                ...doc.data(),\r\n                id:doc.id,\r\n            }\r\n            setNweets(prev =>[nweetObj,...prev]);\r\n        });\r\n        //const dbNweets = await dbService.collection(\"nweets\").get();\r\n        //console.log(dbNweets);\r\n    };*/\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweet\").orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot)=>{\r\n            const newArr = snapshot.docs.map((document)=>({\r\n                id:document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArr);\r\n        })\r\n        //getNweets(nweets);\r\n    },[]);\r\n\r\n    console.log(nweets);\r\n    return(\r\n        <>\r\n        <NewFactory userObj={userObj} />\r\n        <div className=\"container\">\r\n            <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n                <Nweet\r\n                key={nweet.id}\r\n                nweetObj={nweet}\r\n                isOwner={nweet.creatorId === userObj.uid}\r\n                />\r\n            ))}\r\n            </div>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n};\r\nexport default Home;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n    console.log(userObj);\r\n    return(\r\n        <nav>\r\n            <ul style={{display:\"flex\",justifyContent : \"center\",marginTop : 50}}>\r\n                <li>\r\n                    <Link to=\"/\" style = {{marginRight : 10}}>Home\r\n                        <FontAwesomeIcon icon = {faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" style = {{marginLeft : 10, display:\"flex\" ,flexDirection:\"column\",alignItems : \"center\", fontSize:12,}}>\r\n                        <FontAwesomeIcon icon = {faUser} color={\"#04AAFF\"} size=\"2x\" /> \r\n                        <span style={{marginTop:10}}>\r\n                            {userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    ); \r\n};\r\n\r\nexport default Navigation;","import { authService,dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect,useState } from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nconst Profile = ({userObj,refreshUser}) => {\r\n    //const[nweets,setNweets] = useState([]);\r\n    const[newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target : {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName != newDisplayName){\r\n            await userObj.updateProfile({displayName : newDisplayName});    \r\n            refreshUser();\r\n        }\r\n    }\r\n    /*\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService.collection('nweet').where(\"creatorId\", \"==\",userObj.uid).orderBy(\"createdAt\",\"asc\").get();\r\n        //실제 데이터 목록\r\n        const data = nweets.docs.map((doc) => doc.data());\r\n        //array를 setState해준다 Home.js하고 또~옥 같이해주면 되지잉~\r\n        setNweets(data);\r\n    };\r\n\r\n    //Profile컴포넌트가 렌더링된 이후 실행될 함수\r\n    useEffect(() => {\r\n        getMyNweets();    \r\n    },[]);\r\n    \r\n    <div className=\"container\">\r\n        <div style={{ marginTop: 30 }}>\r\n        {nweets && nweets.map((nweet) => (\r\n            <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n        ))}\r\n    </div>\r\n    </div>\r\n    */\r\n    return(\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\r\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{marginTop:10,}} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n           \r\n        </div>\r\n    );\r\n};\r\nexport default Profile;","import { HashRouter as Router, Route,Switch, } from \"react-router-dom\";\r\n//Redirect <Redirect from=\"+\" to=\"/\" />     \r\nimport { useState } from \"react\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nimport { getByDisplayValue } from \"@testing-library/dom\";\r\n\r\nconst AppRouter = ({isLoggedIn,userObj,refreshUser}) => {\r\n    return (\r\n        <Router>\r\n          {isLoggedIn && <Navigation userObj={userObj} />}\r\n          <Switch>\r\n            {isLoggedIn ? (\r\n              <div\r\n                style={{\r\n                  maxWidth: 890,\r\n                  width: \"100%\",\r\n                  margin: \"0 auto\",\r\n                  marginTop: 80,\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Route exact path=\"/\">\r\n                  <Home userObj={userObj} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                </Route>\r\n              </div>\r\n            ) : (\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n            )}\r\n          </Switch>\r\n        </Router>\r\n      );\r\n}\r\n\r\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport { useState,useEffect } from \"react\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const[init,setInit] = useState(false);\n  //const[isLoggedIn,setIsLoggedIn] = useState(authService.currentUser);\n  const[userObj,setUserObj]=useState(null);\n\n  console.log(authService.currentUser);\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    //setUserObj(authService.currentUser);\n    setUserObj({\n      uid : user.uid,\n      displayName : user.displayName,\n      updateProfile :(args) =>  user.updateProfile(args),\n    });\n  }\n  //setInterval(() => console.log(authService.currentUser),2000);\nuseEffect(()=> {authService.onAuthStateChanged((user) =>{  \n    if(user){\n      //setIsLoggedIn(user);\n      //setUserObj(user);\n      setUserObj({\n        uid : user.uid,\n        displayName : user.displayName,\n        updateProfile :(args) => user.updateProfile(args),\n      });\n    }else{\n      setUserObj(false);\n      //setIsLoggedIn(false);\n    }\n    setInit(true);\n  });\n},[]);\n  return (\n    <>\n      {init? <AppRouter refreshUser = {refreshUser} isLoggedIn = {Boolean(userObj)} userObj={userObj}/> : \"initializing...\"} \n       \n    </>\n    //jsx에 자바스크립트 코드를 넣을떄는 ()로 감싸준다. <footer>&copy; {new Date().getFullYear()}Nwitter</footer>\n  );\n    \n}   \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport firebase from \"firebase/compat/app\";\nimport \"./style.css\";\n//import firebase from 'fbase';\n//console.log(firebase);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n   \n   "],"sourceRoot":""}